@model IEnumerable<CDMS.Model.ViewModel.ProductSalesRankingViewModel>

@{
    Layout = null;
}
@*測試捉所有ViewBag*@
@*@{
        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    <p> @viewBagItem.Key @@: @viewBagItem.Value </p>;
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }
    }*@

@functions{

    private string GeneratePageLink(int page, string action = "_List")
    {

        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }

        routeValues.Add("page", page);

        var result = Url.Action("_List", (RouteValueDictionary)routeValues);
        return result;
    }
}
@*<table cellspacing="0" cellpadding="0">
    <col width="66">
    <col width="162" span="2">
    <col width="100" span="4">
    <tr height="30">
        <td height="30" width="1048"><div align="center" class="style2">庫存總值統計表</div></td>
    </tr>
    <tr height="22">
        <td height="22">產品編號：@ViewBag.start 至 @ViewBag.finish</td>
    </tr>
    <tr height="22">
        <td height="22">產品類別：@ViewBag.productKind</td>
    </tr>
    <tr height="22">
        <td height="22">倉庫編號：@ViewBag.wareHouse </td>
    </tr>
</table>*@
@*排行
    產品編號
    產品名稱
    銷售量
    銷售總金額
    銷售總成本
    銷售總毛利
    毛利率%*@
<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@("Rank".ToLocalized())</th>
                <th>
                    @Html.DisplayNameFor(m => m.ProductID)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.TotalQty)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.TotalAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.TotalSalesCost)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.TotalProfit)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m.GrossProfitMargin)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                var index = 0;

                foreach (var item in Model)
                {
                    <tr>
                        <td class='text-center'>@(++index)</td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.ProductID)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.ProductName)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.TotalQty)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.TotalAmount)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.TotalSalesCost)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.TotalProfit)
                        </td>
                        <td class='text-center'>
                            @Html.DisplayFor(m => item.GrossProfitMargin)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model,
        page => GeneratePageLink(page),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "<<",
            LinkToPreviousPageFormat = "<",
            LinkToNextPageFormat = ">",
            LinkToLastPageFormat = ">>"
        },
        new AjaxOptions()
        {
            HttpMethod = "Post",
            UpdateTargetId = "MyContent"

        }))









