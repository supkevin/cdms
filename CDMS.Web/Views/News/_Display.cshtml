@model IEnumerable<CDMS.Model.News>

@{
    Layout = null;
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">               
                <th>
                    @Html.DisplayNameFor(model => model.ReleaseDate)
                </th>         
                <th>
                    @Html.DisplayNameFor(model => model.DepartmentID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NewsTypeID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Content)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.ReleaseDate, "DateTimeTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.DepartmentID, "DepartmentNameListTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.NewsTypeID, "NewsTypeTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Content)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Remarks)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>



@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model, page => Url.Action("_Display",
    new { page }),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
    new PagedListRenderOptions
    {
        LinkToFirstPageFormat = "<<",
        LinkToPreviousPageFormat = "<",
        LinkToNextPageFormat = ">",
        LinkToLastPageFormat = ">>"
    },
    new AjaxOptions()
    {
        HttpMethod = "Post",
        UpdateTargetId = "MyContent"
    }))









