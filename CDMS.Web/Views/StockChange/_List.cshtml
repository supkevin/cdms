@model IEnumerable<CDMS.Model.ViewModel.StockChangeListViewModel>

@{
    Layout = null;
}

@{
    string[] ignore = { "ActionName", "ControllerName" };
    var routeValues = new RouteValueDictionary();
}

@*測試捉所有ViewBag*@
@*@foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
{
    if (viewBagItem.Value != null)
    {
        var type = viewBagItem.Value.GetType();

        if (type == typeof(string) || type == typeof(string[]))
        {
            <p> @viewBagItem.Key @@: @viewBagItem.Value </p>;
            routeValues.Add(viewBagItem.Key, viewBagItem.Value);
        }
    }
}*@

@functions{

    private string GeneratePageLink(int page, string action = "_List")
    {

        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }

        routeValues.Add("page", page);

        var result = Url.Action("_List", (RouteValueDictionary)routeValues);
        return result;
    }
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@Html.OutputText("TextFunction".ToLocalized())</th>
                <th width="120px">
                    @Html.DisplayNameFor(model => model.ChangeDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StockChangeID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChangeReasonID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ChangePersonID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WarehouseOldID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WarehouseNewID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Qty)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>

                            @Html.ActionLink("ButtonEdit".ToLocalized(), "Edit",
                            new { id = item.StockChangeID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(m => item.ChangeDate, "DateTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.StockChangeID)
                        </td>
                        <td>
                            @Utility.GetChangeReasonName(item.ChangeReasonID)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.ChangePersonName)
                        </td>
                        <td>
                            @Utility.GetWarehouseName(item.WarehouseOldID)
                        </td>
                        <td>
                            @Utility.GetWarehouseName(item.WarehouseOldID, item.WarehouseNewID)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.ProductID)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(m => item.ProductName)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(m => item.Qty)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.Remarks)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model,
            page => GeneratePageLink(page),
            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
            new PagedListRenderOptions
            {
                LinkToFirstPageFormat = "<<",
                LinkToPreviousPageFormat = "<",
                LinkToNextPageFormat = ">",
                LinkToLastPageFormat = ">>"
            },
            new AjaxOptions()
            {
                HttpMethod = "Post",
                UpdateTargetId = "MyContent"
            }))






