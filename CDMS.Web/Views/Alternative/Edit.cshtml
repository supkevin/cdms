
@model  CDMS.Model.ViewModel.ProductComplex

@{
    Layout = "~/Views/Shared/_GridForm2.cshtml";
}
<style>
    .nested-group input:focus {
        box-shadow: none;
    }

    .nested-group input:first-child {
        border-bottom-right-radius: 0px;
        border-top-right-radius: 0px;
        border-top-left-radius: 4px;
        border-bottom-left-radius: 4px;
        margin-left: -25px;
    }

    .nested-group input {
        margin-left: -5px;
        border-radius: 0px;
        border-top-right-radius: 4px;
        border-bottom-right-radius: 4px;
    }
</style>
@using (Ajax.BeginForm("Edit", "Alternative", new { area = "" },
                                new AjaxOptions { HttpMethod = "POST",
                                    OnBegin = "OnBegin", OnSuccess = "OnSuccess", OnComplete = "OnComplete", OnFailure = "OnFailure" }))
            {

              @Html.AntiForgeryToken()

    <div class="grid-container outline">
        <div class="row">
            <h4>
                @Html.OutputText("MenuAlternative".ToLocalized())
            </h4>
        </div>
        <div class="row">
            <div class="col-1 title">
                @Html.Label("ProductID".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-2">
                @Html.TextBoxFor(m => m.Product.ProductID,
                new
                {
                    @class = "form-control",
                    readOnly = "ReadOnly"
                })
            </div>
            <div class="col-1 title">
                @Html.Label("ProductName".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-2">
                @Html.EditorFor(m => m.Product.ProductName,
             new
             {
                 htmlAttributes = new
                 {
                     @class = "form-control",
                     readOnly = "ReadOnly"
                 }
             })
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <table class="table table-bordered updownleftright fixTable" id="table">
                    <thead>
                        <tr class="active">
                            <th class="text-nowrap"></th>
                            <th class="text-nowrap">@Html.OutputText("AlternativeID".ToLocalized())</th>
                            <th class="text-nowrap">@Html.OutputText("AlternativeCount".ToLocalized())</th>
                            <th class="text-nowrap">@Html.OutputText("Remarks".ToLocalized())</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.ChildList.Count() > 0)
                        {
                            foreach (var item in Model.ChildList)
                            {
                                try
                                {
                                    Html.RenderPartial("_Item", item);
                                }
                                catch (Exception ex)
                                {
                                    throw;
                                }
                            }
                        }
                        else
                        {
                        <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <button type="button" class="btn btn-warning" id="btnAdd" data-key="@Model.Product.ProductID">
                    <span class="glyphicon glyphicon-plus"></span>
                    @Html.OutputText("ButtonCreate".ToLocalized())
                </button>
                <input type="submit" value="@Html.OutputText("ButtonSave".ToLocalized())" class="btn btn-success" />
                <input type="button" value="@Html.OutputText("ButtonClose".ToLocalized())" onclick="parent.jQuery.fancybox.close();" class="btn btn-inverse" />
            </div>
        </div>
    </div>
}
@section scripts{   
    <script type="text/javascript">
        $(document).ready(function () {
            var options = {
                ajax: {
                    @*url: '@Url.Action("GetForSupplierAutocomplete", "Company")',*@
                    data: function () {
                        var params = {
                            term: '{{{q}}}'
                        };
                        //if (gModel.selectedGroup().hasOwnProperty('ContactGroupID')) {
                        //    params.GroupID = gModel.selectedGroup().ContactGroupID;
                        //}
                        return params;
                    }
                },
                clearOnEmpty: false,
                preserveSelected: true,
                locale: {
                    emptyTitle: '請選擇',
                    currentlySelected: '目前選取',
                    searchPlaceholder: '關鍵字',
                    statusInitialized: '請輸入關鍵字查詢',
                    statusNoResults: '查無資料',
                },
                preprocessData: function (data) {
                    var contacts = [];
                    //console.log('data', data);

                    contacts.push({ value: '', text: '@("TextSelect".ToLocalized())'});

                    if (data) {
                        $.each(data, function (index, item) {
                            contacts.push(
                                {
                                    'value': item.Value,
                                    'text': item.Value + '-' + item.Label,
                                    'data': {
                                        'icon': 'icon-person',
                                        'subtext': ''
                                    },
                                    'disabled': false
                                }
                                );
                        });
                    }
                    return contacts;
                },
            };

            $('.selectpicker.after-init').each(function (index, value) {
                var self = $(value);

                var selected = self.val();

                self.find('[value != ""]').remove();
                self.selectpicker('refresh');
            });

            $('.selectpicker').selectpicker().filter('.with-ajax').ajaxSelectPicker(options);

            $('.selectpicker').on('changed.bs.select', function (e) {
                // do something...
                console.log('changed', $(this).val());
            });
        });
</script>
}










