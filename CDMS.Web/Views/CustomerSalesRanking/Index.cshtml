@using CDMS.Web.Helpers
@{
    var defaultAttribute = new { @class = "form-control", required = "required" };
    var labelAttribute = new { @class = "control-label" };
}

<form class="form-inline" role="form" onsubmit="return false;" id="myForm">
    <table class="table table-striped table-bordered table-rwd">
        <tr>
            <td data-th="" colspan="4">
                @Html.Label("TextCriteria".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </td>
        </tr>

        <tr>
            <td data-th="" class="col-1 title">
                @Html.Label("TextSortOrder".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </td>
            <td data-th="@("TextSortOrder".ToLocalized())" class="col-2">
                @Html.DropDownList("orderBy", ViewBag.OrderByList as SelectList,
                Html.MergeAttributes(
                    new { @class = "selectpicker text-danger" }, defaultAttribute)
                )
            </td>
            <td data-th="" class="col-1 title">
                @Html.Label("TextSalesDate".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </td>
            <td data-th="@("TextSalesDate".ToLocalized())" class="col-2">
                <input type="text" name="dateStart" class="form-control datepicker" />
                @("TextTo".ToLocalized())
                <input type="text" name="dateFinish" class="form-control datepicker" />
            </td>
        </tr>
        <tr>
            <td data-th="" class="col-1 title">
                @Html.Label("TextCustomerStartEnd".ToLocalized(), htmlAttributes: new { @class = "control-label" })
            </td>
            <td data-th="" class="col-2" colspan="3">
                <input type="text" name="start" class="form-control" />
                @("TextTo".ToLocalized())
                <input type="text" name="finish" class="form-control" />
            </td>
        </tr>
    </table>
    <input type="button" id="SearchButton" class="btn btn-warning" value="@Html.OutputText("ButtonSearch".ToLocalized())" />
    <input type="button" id="btnExport"
           class="btn btn-primary" value="@Html.OutputText("ButtonStatistics".ToLocalized())" />
</form>

<hr />
<div id="MyContent"></div>

@section scripts{
    <script>
        $(function () {
            $('#SearchButton').click(function () {
                $('#p').val('1');
                Init();
            });

            Init();
        });

        $('#btnExport').click(function () {
            $('#p').val('1');
            Export();
        });

        function Export() {
            var source = $('#myForm').serializeArray();
            var data = GetParameters(source);

            console.log('data', data);

            //I use blockUI for loading...
            $.blockUI({ message: '<h3>處理中..</h3>' });
            $.ajax({
                type: "POST",               
                url: '@Url.Action("ExportExcel")', //call your controller and action
                data:data,
                //contentType: "application/json; charset=utf-8",
                //dataType: "json",
            }).done(function (result) {
                console.log('result', result);

                $.unblockUI();

                //get the file name for download
                if (result.Url != "") {
                    //use window.location.href for redirect to download action for download the file
                    window.location.href = "@Url.RouteUrl(new
                        { Controller = "CustomerSalesRanking", Action = "Download"})/?file=" + result.Url;
                }
            });
        } //Export

        function Init() {
            var url = '@Url.Action("_List", new { area = "" })';
            // 利用這方法可以把所有欄位送到controller
            var source = $('#myForm').serializeArray();
            var data = GetParameters(source);

            console.log('data', source, data);

            postAjax(url, data, function (result) {
                $("#MyContent").html(result);
            });
        } //Init
    </script>
}










