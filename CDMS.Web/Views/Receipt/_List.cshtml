@model IEnumerable<CDMS.Model.ViewModel.ReceiptListViewModel>

@{
    Layout = null;
}

@*測試捉所有ViewBag*@
@*@{
        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    <p> @viewBagItem.Key @@: @viewBagItem.Value </p>;
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }
    }*@

@functions{

    private string GeneratePageLink(int page, string action = "_List")
    {

        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }

        routeValues.Add("page", page);

        var result = Url.Action("_List", (RouteValueDictionary)routeValues);
        return result;
    }
}

@*
    收款日期
    客戶名稱
    現金金額
    支票號碼
    到期日
    票面金額
    託收(存入)行庫
    帳號
    票據狀況
    備註
*@

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@Html.OutputText("TextFunction".ToLocalized())</th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiptDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CustomerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CashAmount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CheckNum)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DueDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BankName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>

                            @Html.ActionLink("ButtonEdit".ToLocalized(), "Edit",
                            new { id = item.ReceiptID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(model => item.ReceiptDate, "DateTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.CustomerName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.CashAmount)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.CheckNum)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(model => item.DueDate, "DateTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.BankName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.AccountID)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Status)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Remarks)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model,
        page => GeneratePageLink(page),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "<<",
            LinkToPreviousPageFormat = "<",
            LinkToNextPageFormat = ">",
            LinkToLastPageFormat = ">>"
        },
        new AjaxOptions()
        {
            HttpMethod = "Post",
            UpdateTargetId = "MyContent"

        }))





















