@model IEnumerable<CDMS.Model.ViewModel.QuotationComplex>

@{
    Layout = null;
}

@*測試捉所有ViewBag*@
@{
    string[] ignore = { "ActionName", "ControllerName" };
    var routeValues = new RouteValueDictionary();

    foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
    {
        if (viewBagItem.Value != null)
        {
            var type = viewBagItem.Value.GetType();

            if (type == typeof(string) || type == typeof(string[]))
            {
                <p> @viewBagItem.Key @@: @viewBagItem.Value </p>;
                routeValues.Add(viewBagItem.Key, viewBagItem.Value);
            }
        }
    }
}

@functions{

    private string GeneratePageLink(int page, string action = "_List")
    {

        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }

        routeValues.Add("page", page);

        var result = Url.Action("_List", (RouteValueDictionary)routeValues);
        return result;
    }
}

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@Html.OutputText("TextFunction".ToLocalized())</th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.QuotationID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.QuotePerson)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.CustomerID)
                </th>
                <th>
                    @("CustomerName".ToLocalized())
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.ContactPerson)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.ContactPhone)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.Result)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quotation.Remarks)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @if (string.IsNullOrEmpty(item.Quotation.Result))
                            {
                                @Html.ActionLink("ButtonAudit".ToLocalized(), "Edit", "Audit",
                                          new { id = item.Quotation.QuotationID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })
                            }
                            else
                            {
                                @Html.ActionLink("ButtonView".ToLocalized(), "Display", "Audit",
                                          new { id = item.Quotation.QuotationID, area = "" }, new { @class = "btn btn-info fancybox fancybox.iframe" })
                            }
                        </td>
                        <td width="120px">
                            @Html.DisplayFor(model => item.Quotation.QuotationID)
                        </td>
                        <td>
                            @*-----------------kevin新增修改   begin----------------*@
                            @Html.DisplayFor(model => item.Quotation.QuotePersonName)
                            @*-----------------kevin新增修改   end------------------*@
                            @*@Html.DisplayFor(model => item.Quotation.QuotePerson)*@
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.CustomerID)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.CustomerID, "CompanyNameListTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.ContactPerson)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.ContactPhone)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.Result, "ResultTypeListTemplate")
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Quotation.Remarks)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model,
    page => GeneratePageLink(page),
    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
    new PagedListRenderOptions
    {
        LinkToFirstPageFormat = "<<",
        LinkToPreviousPageFormat = "<",
        LinkToNextPageFormat = ">",
        LinkToLastPageFormat = ">>"
    },
    new AjaxOptions()
    {
        HttpMethod = "Post",
        UpdateTargetId = "MyContent"
    }))
