@using CDMS.Web.Helpers

@model CDMS.Model.ViewModel.PurchaseComplex

@{
    Layout = null;

    var defaultAttribute = new { @class = "form-control"};

}
<div class="grid-container outline">
    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.PurchaseID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.PurchaseID, new
       {
           htmlAttributes = Html.MergeAttributes(new { readOnly = "readOnly" }, defaultAttribute)
       })
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.Activate, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.DropDownListFor(m => m.Purchase.Activate,
               ViewBag.YseNoList as SelectList, null,
               Html.MergeAttributes(new { readOnly = "readOnly" }, defaultAttribute))
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.SupplierID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.DropDownListFor(m => m.Purchase.SupplierID,
                ViewBag.CompanyList as SelectList, "TextSelect".ToLocalized(),
                Html.MergeAttributes(
                    new
                    {
                        @class = "selectpicker text-danger with-ajax after-init",
                        data_show_subtext = "true",
                        data_live_search = "true",
                        data_abs_ajax_url = string.Format("{0}", Url.Action("GetForSupplierAutocomplete", "Company")),
                    }, defaultAttribute)
                )
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.PurchaseDate, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.PurchaseDate,
           "DateTemplate",
           new
           {
               htmlAttributes = Html.MergeAttributes(new { @class = "datepicker" }, defaultAttribute)
           })
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.ContactPerson, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.ContactPerson,
                new
                {
                    htmlAttributes = Html.MergeAttributes(new { id = "txtContactPerson" }, defaultAttribute)
                })
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.ContactPhone, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.ContactPhone,
                new
                {
                    htmlAttributes = Html.MergeAttributes(new { id = "txtContactPhone" }, defaultAttribute)
                })
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.CurrencyID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.DropDownListFor(m => m.Purchase.CurrencyID,
            ViewBag.CurrencyKindList as SelectList, "TextSelect".ToLocalized(),
            Html.MergeAttributes(new { }, defaultAttribute))
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.ExchangeRate,
           htmlAttributes: new { @class = "control-label"})
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.ExchangeRate,
               new
               {
                   htmlAttributes = Html.MergeAttributes(new { data_key = "ExchangeRate" }, defaultAttribute)
               })
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.WarehouseID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.DropDownListFor(m => m.Purchase.WarehouseID,
            ViewBag.WarehouseList as SelectList, "TextSelect".ToLocalized(),
            Html.MergeAttributes(new { }, defaultAttribute))
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.AccountMonth, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.AccountMonth,
                new
                {
                    htmlAttributes = Html.MergeAttributes(new { }, defaultAttribute)
                })
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.InvoiceID, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.InvoiceID,
                new
                {
                    htmlAttributes = Html.MergeAttributes(new { required = "" }, defaultAttribute)
                })
        </div>
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.InvoiceAmount, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-2">
            @Html.EditorFor(m => m.Purchase.InvoiceAmount,
                new
                {
                    htmlAttributes = Html.MergeAttributes(new { required = "" }, defaultAttribute)
                })
        </div>
    </div>

    <div class="row">
        <div class="col-1 title">
            @Html.MarkLabelFor(m => m.Purchase.Remarks, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-5">
            @Html.TextAreaFor(m => m.Purchase.Remarks,
            Html.MergeAttributes(new { @cols = 80, @rows = 3 }, defaultAttribute)
            )
        </div>
    </div>

    <!--(start)List(start)-->
    @*<div class="jumbotron">*@
    <div class="row">
        <div class="col-6">
            <table class="table table-bordered updownleftright fixTable" id="table">
                <thead>
                    <tr class="active">
                        <th class="text-nowrap"></th>
                        <th class="text-nowrap" style="width:280px">@Html.OutputText("ProductID".ToLocalized())</th>
                        <th class="text-nowrap" style="width:110px">@Html.OutputText("PriceKindID".ToLocalized())</th>
                        <th class="text-nowrap" style="width:110px">@Html.OutputText("ConditionID".ToLocalized())</th>
                        <th class="text-nowrap">@Html.OutputText("Discount".ToLocalized())</th>
                        <th class="text-nowrap" style="width:110px">@Html.OutputText("ForeignPrice".ToLocalized())</th>
                        <th class="text-nowrap" style="width:100px">@Html.OutputText("Price".ToLocalized())</th>
                        <th class="text-nowrap" style="width:80px">@Html.OutputText("Qty".ToLocalized())</th>
                        <th class="text-nowrap" style="width:110px">@Html.OutputText("Amount".ToLocalized())</th>
                        <th class="text-nowrap">@Html.OutputText("Remarks".ToLocalized())</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.ChildList.Count() > 0)
                    {
                        foreach (var item in Model.ChildList)
                        {
                            try
                            {
                                Html.RenderPartial("_Item", item);
                            }
                            catch (Exception ex)
                            {
                                throw;
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    @*</div>*@
    <!--(end)List(end)-->
</div>