@model IEnumerable<CDMS.Model.ViewModel.ReceivableSummaryViewModel>

@{
    Layout = null;

    decimal totalAmount = 0;
}

@*測試捉所有ViewBag*@
@*@{
        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    <p> @viewBagItem.Key @@: @viewBagItem.Value </p>;
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }
    }*@

@functions{

    private string GeneratePageLink(int page, string action = "_List")
    {

        string[] ignore = { "ActionName", "ControllerName" };
        var routeValues = new RouteValueDictionary();

        foreach (var viewBagItem in ViewContext.ViewData.Where(x => ignore.Contains(x.Key) == false))
        {
            if (viewBagItem.Value != null)
            {
                var type = viewBagItem.Value.GetType();

                if (type == typeof(string) || type == typeof(string[]))
                {
                    routeValues.Add(viewBagItem.Key, viewBagItem.Value);
                }
            }
        }

        routeValues.Add("page", page);

        var result = Url.Action("_List", (RouteValueDictionary)routeValues);
        return result;
    }
}

@*帳款月份
    廠商編號
    廠商名稱
    上期餘額
    銷貨金額
    銷貨稅額
    進貨金額
    進貨稅額
    本期已收款金額
    本期已付款金額
    銷貨折讓金額合計
    銷貨抵扣金額合計
    進貨折讓金額合計
    進貨抵扣金額合計
    本期餘額*@

<div class="table-responsive hidden">
    <table class="table table-bordered">
        <tr>
            <td calss="text-rigth" with="100px">@("TextTotalAmount".ToLocalized())</td>
            <td>@totalAmount</td>
        </tr>
    </table>
</div>

<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@Html.OutputText("TextFunction".ToLocalized())</th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountMonth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CompanyID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CompanyName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastBalance)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesAmountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesTaxTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaseAmountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaseTaxTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiptAmountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PaymentAmountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesDiscountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesDeductTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaseDiscountTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchaseDeductTotal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Balance)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {                
                foreach (var item in Model)
                {
                    totalAmount += item.Balance; 

                    <tr>
                        <td>
                            @Html.ActionLink("ButtonReconciliation".ToLocalized(), "Create",
                            new { company = item.CompanyID, accountMonth = item.AccountMonth, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })
                            <br />
                            @Html.ActionLink("ButtonReceivableDetail".ToLocalized(), "Edit",
                            new { company = item.CompanyID, accountMonth = item.AccountMonth, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(model => item.AccountMonth)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(model => item.CompanyID)
                        </td>
                        <td class="text-center">
                            @Html.DisplayFor(model => item.CompanyName)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.LastBalance)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.SalesAmountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.SalesTaxTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.PurchaseAmountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.PurchaseTaxTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.ReceiptAmountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.PaymentAmountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.SalesDiscountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.SalesDeductTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.PurchaseDiscountTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.PurchaseDeductTotal)
                        </td>
                        <td class="text-right">
                            @Html.DisplayFor(model => item.Balance)
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model,
        page => GeneratePageLink(page),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "<<",
            LinkToPreviousPageFormat = "<",
            LinkToNextPageFormat = ">",
            LinkToLastPageFormat = ">>"
        },
        new AjaxOptions()
        {
            HttpMethod = "Post",
            UpdateTargetId = "MyContent"
        }))












































