
@model IEnumerable<CDMS.Model.ViewModel.ProductListViewModel>

@{
    Layout = null;
}
<div class="table-responsive">
    <table class="table table-bordered">
        <thead>
            <tr class="active">
                <th>@Html.OutputText("TextFunction".ToLocalized())</th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UnitID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.KindID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SafeStock)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ListPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LatestCost)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SPEC)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BOM)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Remarks)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Activate)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td>

                            @Html.ActionLink("ButtonEdit".ToLocalized(), "Edit", "Product",
                            new { id = item.ProductID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })

                            @*@Html.ActionLink("ButtonAlternative".ToLocalized(), "Index", "Alternative",
                            new { id = item.ProductID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })*@
                            

                            @Html.ActionLink("ButtonImage".ToLocalized(), "Index", "ProductImage",
                            new { id = item.ProductID, area = "" }, new { @class = "btn btn-primary fancybox fancybox.iframe" })


                            @*代碼有使用不可刪除*@
                            @*@if (!item.Inspection.Any())
                            {
                                @Html.ActionLink("ButtonDelete".ToLocalized(), "Delete", "Product",
                                new { id = item.ProductID, area = "" }, new { @class = "btn btn-danger fancybox fancybox.iframe" })
                            }*@
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ProductID)
                        </td>
                        <td>
                            
                            @Html.DisplayFor(model => item.ProductName)
                        </td>
                        <td>
                           @Html.DisplayFor(model => item.UnitName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.KindName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.SupplierName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.SafeStock)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.ListPrice)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.SalesCost)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.LatestCost)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.SPEC)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.BOM)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Remarks)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Activate, "ActivateTemplate")
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model, page => Url.Action("_List", 
       new { txt = ViewBag.txt, orderby = ViewBag.orderby, sort = ViewBag.sort, page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "<<",
            LinkToPreviousPageFormat = "<",
            LinkToNextPageFormat = ">",
            LinkToLastPageFormat = ">>"
        },
        new AjaxOptions()
        {
            HttpMethod = "Post",
            UpdateTargetId = "MyContent"

        }))









