@model IEnumerable<CDMS.Model.Inspection>

@{
    Layout = null;
}
<style>
    td {
        text-align: center;
    }
</style>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr class="active" style="border-bottom-style:solid;border-top-style:solid;">
                <th>
                    @Html.OutputText("TextiCount".ToLocalized())
                </th>
                <th>
                    @Html.OutputText("TextFunction".ToLocalized())
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CX_Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ID_Workplace)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ID_Feedback)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ID_Observation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ID_Track)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ID_Status)
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Count() > 0)
            {

                int p = Convert.ToInt32(ViewBag.p);
                int PageSize = Convert.ToInt32(ViewBag.PageSize);

                int iCount = 1 + ((p - 1) * PageSize);

                foreach (var item in Model)
                {

                    <tr style="border-bottom-style:solid;border-top-style:solid;background-color:@item.Workplace.CX_Color;">

                        <td rowspan="3" style="vertical-align: middle; text-align:center; ">@iCount.ToString()</td>
                        <td rowspan="3">
                            @if (item.ID_Status == (int)Status.Close.Value)
                            {
                                @Html.ActionLink("ButtonView".ToLocalized(),
                                         "Display", "Inspection", new { id = item.ID_Inspection, area = "" },
                                         new { @class = "btn btn-info fancybox fancybox.iframe" })
                            }
                            else
                            {
                                @Html.ActionLink("ButtonEdit".ToLocalized(),
                                       "Edit", "Process", new { id = item.ID_Inspection, area = "" },
                                       new { @class = "btn btn-primary fancybox fancybox.iframe" })
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.CX_Date)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Workplace.CX_Workplace)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Feedback.CX_Feedback)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Observation.CX_Observation)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Track.CX_Track)
                        </td>
                        <td>
                            @Html.DisplayFor(model => Status.FromValue(item.ID_Status).Text)
                        </td>
                    </tr>
                    <tr style="border-bottom-style:solid;border-top-style:hidden;background-color:@item.Workplace.CX_Color;">
                        <td colspan="7" class="text-left">
                            <span>@Html.DisplayWithBreaksFor(model => item.CX_Content)</span>
                            <br />
                            @foreach (var itemI in item.Inspection_Image.Where(x => (x.FG_Type ?? 0) == (int)GlobalSettings.ImageType.Before))
                            {
                                @*@Html.DisPlayImage(itemI.BI_Inspection_Image, 200, item.CX_Date, "")*@
                                @Html.DisplayImageByPath(
                                @Url.Action("GetImage", "InspectionImage",
                                    new { id_inspection_image = itemI.ID_Inspection_Image }), 100)
                            }
                        </td>
                    </tr>
                    <tr style="border-bottom-style:solid;border-top-style:hidden;background-color:@item.Workplace.CX_Color;">
                        <td colspan="7" class="text-left">
                            @foreach (var itemI in item.Inspection_Image.Where(x => (x.FG_Type ?? 0) == (int)GlobalSettings.ImageType.After))
                            {                                
                                @Html.DisplayImageByPath(
                                @Url.Action("GetImage", "InspectionImage",
                                    new { id_inspection_image = itemI.ID_Inspection_Image }), 100)
                            }
                        </td>
                    </tr>
                    iCount++;
                }
            }
            else
            {
                <tr><td colspan="99">@Html.OutputText("TextNoData".ToLocalized())</td></tr>
            }
        </tbody>
    </table>
</div>

@Html.Hidden("p", (Int32)@ViewBag.p)
@using PagedList
@using PagedList.Mvc
@Html.PagedListPager((IPagedList)Model, page => Url.Action("_List", new { txt = ViewBag.txt, orderby = ViewBag.orderby, sort = ViewBag.sort, page, id_overtype = ViewBag.id_overtype, id_country = ViewBag.id_country, goesfrom = ViewBag.goesfrom, goesto = ViewBag.goesto }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
        new PagedListRenderOptions
        {
            LinkToFirstPageFormat = "<<",
            LinkToPreviousPageFormat = "<",
            LinkToNextPageFormat = ">",
            LinkToLastPageFormat = ">>"
        },
        new AjaxOptions()
        {
            HttpMethod = "Post",
            UpdateTargetId = "Content"

        }))







